{
  "version": 3,
  "sources": ["../bundle-BOfNB9/checked-fetch.js", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-BOfNB9/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-BOfNB9/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/dev-xA56mz",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "/// <reference types=\"@cloudflare/workers-types\" />\n\nexport interface Env {\n  INVITES: KVNamespace;\n  INVITE_TOKEN: string;\n}\n\ninterface PageMetadata {\n  title: string;\n  description: string;\n  image?: string;\n}\n\n// Simple markdown to HTML converter\nfunction markdownToHtml(markdown: string): { content: string, metadata: PageMetadata } {\n  const metadata: PageMetadata = {\n    title: \"Rabble Community\",\n    description: \"Private, ad-free spaces where you set the rules.\"\n  };\n\n  // Extract front matter\n  let content = markdown;\n  if (markdown.startsWith('---')) {\n    const endOfFrontMatter = markdown.indexOf('---', 3);\n    if (endOfFrontMatter !== -1) {\n      const frontMatter = markdown.substring(3, endOfFrontMatter).trim();\n      content = markdown.substring(endOfFrontMatter + 3).trim();\n      \n      // Parse front matter\n      const titleMatch = frontMatter.match(/title:\\s*\"([^\"]*)\"/);\n      if (titleMatch) metadata.title = titleMatch[1];\n      \n      const descMatch = frontMatter.match(/description:\\s*\"([^\"]*)\"/);\n      if (descMatch) metadata.description = descMatch[1];\n      \n      const imageMatch = frontMatter.match(/image:\\s*\"([^\"]*)\"/);\n      if (imageMatch) metadata.image = imageMatch[1];\n    }\n  }\n\n  // Convert markdown to HTML\n  // Headers\n  content = content.replace(/^### (.*$)/gm, '<h3>$1</h3>');\n  content = content.replace(/^## (.*$)/gm, '<h2>$1</h2>');\n  content = content.replace(/^# (.*$)/gm, '<h1>$1</h1>');\n  \n  // Emphasis\n  content = content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n  content = content.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n  \n  // Links\n  content = content.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)(?:{\\.([^}]+)})?/g, (match, text, url, className) => {\n    if (className) {\n      return `<a href=\"${url}\" class=\"${className}\">${text}</a>`;\n    }\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n  \n  // Lists\n  content = content.replace(/^\\s*-\\s*(.*$)/gm, '<li>$1</li>');\n  content = content.replace(/(<li>.*<\\/li>\\n)+/g, function(match) {\n    return '<ul>' + match + '</ul>';\n  });\n  \n  // Tables\n  content = content.replace(/^\\|(.*)\\|$/gm, '<tr>$1</tr>');\n  content = content.replace(/<tr>(.*)<\\/tr>/g, (match, content) => {\n    const cells = content.split('|').map(cell => cell.trim());\n    let row = '<tr>';\n    for (const cell of cells) {\n      if (cell) {\n        row += `<td>${cell}</td>`;\n      }\n    }\n    row += '</tr>';\n    return row;\n  });\n  content = content.replace(/(<tr>.*<\\/tr>\\n)+/g, function(match) {\n    return '<table>' + match + '</table>';\n  });\n  \n  // Code blocks\n  content = content.replace(/```([^`]*)\\n([^`]*)```/g, '<pre><code class=\"language-$1\">$2</code></pre>');\n  content = content.replace(/`([^`]*)`/g, '<code>$1</code>');\n  \n  // Sections\n  content = content.replace(/<section id=\"([^\"]+)\">(.*?)<\\/section>/gs, '<section id=\"$1\">$2</section>');\n  \n  // Details/summary\n  content = content.replace(/<details>\\s*<summary>(.*?)<\\/summary>(.*?)<\\/details>/gs, '<details><summary>$1</summary>$2</details>');\n  \n  // Quotes\n  content = content.replace(/:::(quote|info|warning)\\n([\\s\\S]*?):::/g, '<blockquote class=\"$1\">$2</blockquote>');\n  \n  // Horizontal rule\n  content = content.replace(/^---$/gm, '<hr>');\n  \n  // Paragraphs - handle after other conversions\n  content = content.replace(/^([^<].*[^>])$/gm, '<p>$1</p>');\n  \n  // Remove empty paragraphs\n  content = content.replace(/<p><\\/p>/g, '');\n  \n  return { content, metadata };\n}\n\nconst ALPHANUM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nfunction generateCode(length = 8): string {\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += ALPHANUM[Math.floor(Math.random() * ALPHANUM.length)];\n  }\n  return result;\n}\n\n// Static files for app-linking\nconst STATIC_FILES: Record<string, { content: string; contentType: string }> = {\n  '/.well-known/assetlinks.json': {\n    content: JSON.stringify([{\n      relation: ['delegate_permission/common.handle_all_urls'],\n      target: {\n        namespace: 'android_app',\n        package_name: 'community.rabble',\n        sha256_cert_fingerprints: ['YOUR_APP_FINGERPRINT_HERE']\n      }\n    }]),\n    contentType: 'application/json'\n  },\n  '/apple-app-site-association': {\n    content: JSON.stringify({\n      applinks: {\n        apps: [],\n        details: [{\n          appID: 'YOUR_TEAM_ID.community.rabble',\n          paths: ['/i/*']\n        }]\n      }\n    }),\n    contentType: 'application/json'\n  }\n};\n\n// Design tokens and CSS variables\nconst DESIGN_TOKENS = {\n  colors: {\n    primary: \"#6E41E2\",\n    secondary: \"#FF7846\",\n    accent: \"#A642FE\",\n    highlight: \"#FFB155\",\n    surface: \"#FFFFFF\",\n    surfaceAlt: \"#F8FAFF\",\n    textPrimary: \"#111827\",\n    textSecondary: \"#4B5563\"\n  },\n  typography: {\n    fontFamily: \"Inter, sans-serif\",\n    h1: { size: 48, weight: 700, lineHeight: 56 },\n    body: { size: 16, weight: 400, lineHeight: 28 }\n  },\n  spacing: 8,\n  radius: 16,\n  shadow: \"0 4px 24px rgba(0,0,0,0.08)\"\n};\n\n// Create a page layout with the provided content\nfunction createPage(title: string, description: string, content: string, image?: string): string {\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>${title} - Rabble Community</title>\n  <meta name=\"description\" content=\"${description}\">\n  ${image ? `<meta property=\"og:image\" content=\"${image}\">` : ''}\n  <meta property=\"og:title\" content=\"${title}\">\n  <meta property=\"og:description\" content=\"${description}\">\n  <meta property=\"og:type\" content=\"website\">\n  <meta property=\"og:site_name\" content=\"Rabble Community\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --primary: ${DESIGN_TOKENS.colors.primary};\n      --secondary: ${DESIGN_TOKENS.colors.secondary};\n      --accent: ${DESIGN_TOKENS.colors.accent};\n      --highlight: ${DESIGN_TOKENS.colors.highlight};\n      --surface: ${DESIGN_TOKENS.colors.surface};\n      --surface-alt: ${DESIGN_TOKENS.colors.surfaceAlt};\n      --text-primary: ${DESIGN_TOKENS.colors.textPrimary};\n      --text-secondary: ${DESIGN_TOKENS.colors.textSecondary};\n      --font-family: ${DESIGN_TOKENS.typography.fontFamily};\n      --spacing: ${DESIGN_TOKENS.spacing}px;\n      --radius: ${DESIGN_TOKENS.radius}px;\n      --shadow: ${DESIGN_TOKENS.shadow};\n    }\n    \n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    \n    body {\n      font-family: var(--font-family);\n      color: var(--text-primary);\n      line-height: 1.6;\n      background-color: var(--surface);\n    }\n    \n    .header {\n      background-color: var(--primary);\n      color: white;\n      padding: 1rem 0;\n    }\n    \n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 0 2rem;\n    }\n    \n    .nav {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    .logo {\n      font-size: 1.5rem;\n      font-weight: 700;\n      color: white;\n      text-decoration: none;\n    }\n    \n    .nav-links {\n      display: flex;\n      list-style: none;\n    }\n    \n    .nav-links li {\n      margin-left: 2rem;\n    }\n    \n    .nav-links a {\n      color: white;\n      text-decoration: none;\n      font-weight: 500;\n      opacity: 0.9;\n      transition: opacity 0.2s;\n    }\n    \n    .nav-links a:hover {\n      opacity: 1;\n    }\n    \n    .content {\n      padding: 3rem 0;\n    }\n    \n    .footer {\n      background-color: #2C2141;\n      color: white;\n      padding: 2rem 0;\n      font-size: 0.875rem;\n    }\n    \n    .footer a {\n      color: white;\n      opacity: 0.8;\n      text-decoration: none;\n    }\n    \n    .footer a:hover {\n      opacity: 1;\n    }\n    \n    /* Components */\n    h1 {\n      font-size: ${DESIGN_TOKENS.typography.h1.size}px;\n      font-weight: ${DESIGN_TOKENS.typography.h1.weight};\n      line-height: ${DESIGN_TOKENS.typography.h1.lineHeight}px;\n      margin-bottom: 1.5rem;\n    }\n    \n    h2 {\n      font-size: 2rem;\n      margin-bottom: 1rem;\n      color: var(--primary);\n    }\n    \n    h3 {\n      font-size: 1.5rem;\n      margin-bottom: 1rem;\n      margin-top: 2rem;\n      color: var(--primary);\n    }\n    \n    p {\n      margin-bottom: 1.5rem;\n      line-height: 1.7;\n    }\n    \n    ul, ol {\n      margin-bottom: 1.5rem;\n      padding-left: 2rem;\n    }\n    \n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-bottom: 2rem;\n    }\n    \n    th, td {\n      padding: 0.75rem;\n      text-align: left;\n      border-bottom: 1px solid #eee;\n    }\n    \n    th {\n      font-weight: 600;\n      color: var(--primary);\n    }\n    \n    code, pre {\n      font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\n      background-color: var(--surface-alt);\n      border-radius: 4px;\n    }\n    \n    code {\n      padding: 0.2em 0.4em;\n      font-size: 0.9em;\n    }\n    \n    pre {\n      padding: 1rem;\n      overflow-x: auto;\n      margin-bottom: 1.5rem;\n    }\n    \n    blockquote {\n      border-left: 4px solid var(--primary);\n      padding-left: 1rem;\n      margin-left: 0;\n      margin-bottom: 1.5rem;\n      font-style: italic;\n      color: var(--text-secondary);\n    }\n    \n    blockquote.quote {\n      background-color: var(--surface-alt);\n      padding: 1.5rem;\n      border-radius: var(--radius);\n      font-style: italic;\n    }\n    \n    hr {\n      border: none;\n      border-top: 1px solid #eee;\n      margin: 2rem 0;\n    }\n    \n    form {\n      margin-bottom: 1.5rem;\n    }\n    \n    input, button {\n      font-family: var(--font-family);\n      font-size: 1rem;\n      padding: 0.75rem 1rem;\n      border-radius: var(--radius);\n      border: 1px solid #ddd;\n    }\n    \n    input {\n      width: 100%;\n      margin-bottom: 1rem;\n    }\n    \n    button {\n      background-color: var(--primary);\n      color: white;\n      border: none;\n      cursor: pointer;\n      font-weight: 500;\n      transition: background-color 0.2s;\n    }\n    \n    button:hover {\n      background-color: #5932C4;\n    }\n    \n    .button-primary {\n      display: inline-block;\n      background-color: var(--secondary);\n      color: white;\n      text-decoration: none;\n      padding: 0.75rem 1.5rem;\n      border-radius: 50px;\n      font-weight: 600;\n      margin-right: 1rem;\n      margin-bottom: 1rem;\n      transition: background-color 0.2s;\n    }\n    \n    .button-primary:hover {\n      background-color: #ff6633;\n    }\n    \n    .button-secondary {\n      display: inline-block;\n      background-color: white;\n      color: var(--primary);\n      text-decoration: none;\n      padding: 0.75rem 1.5rem;\n      border-radius: 50px;\n      font-weight: 600;\n      border: 1px solid var(--primary);\n      margin-bottom: 1rem;\n      transition: background-color 0.2s;\n    }\n    \n    .button-secondary:hover {\n      background-color: var(--surface-alt);\n    }\n    \n    details {\n      margin-bottom: 1.5rem;\n      padding: 1rem;\n      background-color: var(--surface-alt);\n      border-radius: var(--radius);\n    }\n    \n    summary {\n      font-weight: 600;\n      cursor: pointer;\n    }\n    \n    section {\n      margin-bottom: 3rem;\n    }\n    \n    small {\n      font-size: 0.875rem;\n      color: var(--text-secondary);\n    }\n    \n    @media (max-width: 768px) {\n      .nav-links {\n        display: none;\n      }\n      \n      h1 {\n        font-size: 2.5rem;\n        line-height: 1.2;\n      }\n      \n      .container {\n        padding: 0 1rem;\n      }\n    }\n  </style>\n</head>\n<body>\n  <header class=\"header\">\n    <div class=\"container\">\n      <nav class=\"nav\">\n        <a href=\"/\" class=\"logo\">Rabble</a>\n        <ul class=\"nav-links\">\n          <li><a href=\"/about\">About</a></li>\n          <li><a href=\"/faq\">FAQ</a></li>\n          <li><a href=\"/roadmap\">Roadmap</a></li>\n          <li><a href=\"/blog\">Blog</a></li>\n          <li><a href=\"/developers\">Developers</a></li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n  \n  <main class=\"content\">\n    <div class=\"container\">\n      ${content}\n    </div>\n  </main>\n  \n  <footer class=\"footer\">\n    <div class=\"container\">\n      <p>&copy; 2025 Verse PBC \u00B7 <a href=\"/terms-of-service\">Terms</a> \u00B7 <a href=\"/privacy-policy\">Privacy</a></p>\n    </div>\n  </footer>\n</body>\n</html>`;\n}\n\n// Page content in markdown format\nconst PAGES = {\n  // Landing page\n  '/': `---\ntitle: \"Rabble \u2014 Reclaim Your Groups\"\ndescription: \"Private, ad\u2011free spaces where *you* set the rules.\"\nimage: \"/assets/og-hero.png\"\n---\n\n# Reclaim Your Groups  \n*Say goodbye to algorithms, ads, and Meta lock\u2011in.*\n\n[Open Web App](/app){.button-primary}\n[Join Waitlist](#waitlist){.button-secondary}\n\n---\n\n## Why Switch to Rabble?\n| Problem with Big Social | How Rabble Fixes It |\n|-------------------------|---------------------|\n| Groups buried in ads & noise | Pure, chronological feed \u2014 no ads, no rank\u2011manipulation |\n| You don't own your community data | **You own it & can take it anywhere** |\n| Suspended at any time | Transparent, community\u2011driven moderation |\n| Profiles tracked & sold | Zero surveillance; privacy\u2011first design |\n\n### Highlights\n- **Invite\u2011only spaces** for clubs, activism, families, fandoms\n- **End\u2011to\u2011end encrypted conversations** by default\n- **Cross\u2011platform** \u2014 iOS, Android, web, desktop\n- **Governance tools** \u2014 polls & weighted voting so *members* decide\n\n:::quote\n\"Within a day we'd migrated our 120\u2011member collective off Facebook Groups. Now we actually *own* our space.\" \u2014 *Maya, community organiser*\n:::\n\n---\n\n## How It Works (1\u20112\u20113)\n1. **Create a Group** \u2014 takes 30 seconds.\n2. **Send Invite Link** \u2014 email, DM, QR \u2014 your pick.\n3. **Chat, share, decide** \u2014 everything stays yours forever.\n\n<details><summary>Want the nerdy details?</summary>\nRabble is built on the open Nostr protocol, which uses public\u2011key cryptography so you hold your own identity. No central server owns your data.\n</details>\n\n---\n\n<section id=\"waitlist\">\n### Get Early Access\n<form action=\"https://rabble.mailerapi.com\" method=\"post\">\n  <input type=\"email\" placeholder=\"Email\" required />\n  <button>Request Invite</button>\n</form>\n<small>No spam. One click to unsubscribe.</small>\n</section>`,\n\n  // About page\n  '/about': `---\ntitle: \"About Rabble & Verse PBC\"\ndescription: \"Social media that serves people, not advertisers.\"\nimage: \"/assets/og-about.png\"\n---\n\n### Our Mission\nBig platforms turned *your* communities into someone else's revenue stream. Rabble flips the script: **communities own themselves**.\n\n### A Public\u2011Benefit Corporation\nVerse PBC is legally bound to prioritise public good over profit. We answer to a charter, not venture\u2011capital metrics.\n\n### Guiding Principles\n| Principle | In Practice |\n|-----------|-------------|\n| **User sovereignty** | Port your data anytime; export keys & posts. |\n| **Privacy by default** | End\u2011to\u2011end encryption, no tracking pixels, minimal logs. |\n| **Open foundations** | Built on open protocols & open\u2011source code. |\n\n### Meet the Team\n| | | |\n|---|---|---|\n| ![Evan](/press-kit/headshots/evan.webp) | **Evan Henshaw\u2011Plath** | CEO / Product lead |\n| ![Erin](/press-kit/headshots/erin.webp) | **Erin** | Community & Ops |\n\n*Want to join us?* [Open roles](https://verse-pbc.org/jobs)`,\n\n  // Privacy Policy\n  '/privacy-policy': `---\ntitle: \"Privacy Policy\"\ndescription: \"Your data, your rules.\"\n---\n\n### TL;DR\nWe do **not** track you across the web, sell your data, or inject ads. All personal content lives on servers you choose.\n\n| Data | Purpose | Retention |\n|------|---------|-----------|\n| Email (waitlist) | Send invites & updates | Until you unsubscribe |\n| Nostr pubkey | Deliver encrypted invites | Until account deletion |\n| Plausible analytics | Aggregate usage stats | 24 h rolling |\n\n---\n\n## Full Policy\n<details>\n<summary>Expand legal text</summary>\n\n1. **Controller** \u2014 Verse PBC (NZBN 9429051234567)  \n2. **Lawful basis** \u2014 consent (Article 6 GDPR)  \n3. **Rights** \u2014 access, rectify, erase. Email privacy@rabble.community  \n4. **Transfers** \u2014 servers in \uD83C\uDDF3\uD83C\uDDFF & \uD83C\uDDE9\uD83C\uDDEA; SCCs where required  \n5. **Security** \u2014 AES\u2011256 at rest, TLS 1.3 in transit  \n6. **Cookies** \u2014 only a short\u2011lived session cookie  \n7. **Changes** \u2014 versioned; 14\u2011day notice for material updates\n\n</details>`,\n\n  // Terms of Service\n  '/terms-of-service': `---\ntitle: \"Terms of Service\"\ndescription: \"Rules to keep Rabble safe & sustainable.\"\n---\n\n### Quick Summary\n- **Be excellent** \u2014 no hate speech, harassment, or illegal content.\n- **You own your posts**; we need a license to display them.\n- **No guarantees** \u2014 beta software can break; export keys regularly.\n- **Disputes** \u2014 NZ law; arbitration before courts.\n\n---\n\n## Full Terms\n<details>\n<summary>Expand full text</summary>\n\n1. **Acceptance** \u2014 by creating an account you agree\u2026  \n2. **Eligibility** \u2014 13 years or older\u2026  \n3. **User content**\u2026  \n*(insert full legalese here)*\n\n</details>`,\n\n  // FAQ\n  '/faq': `---\ntitle: \"Frequently Asked Questions\"\ndescription: \"Everything you wanted to know about leaving Meta behind.\"\n---\n\n### Is Rabble a Facebook/WhatsApp replacement?\nYes \u2014 but without ads, data harvesting, or algorithmic feeds.\n\n### Do I need to understand crypto or Nostr?\nNo. Rabble works like any modern chat app. Keys & relays are optional\u2011advanced settings.\n\n### How is this free if you don't sell ads?\nWe'll launch optional paid perks (custom domains, extra storage) \u2014 core chat stays free forever.\n\n### Can I export or move my group later?\nAbsolutely. You can download your archive and import it elsewhere.`,\n\n  // Roadmap\n  '/roadmap': `---\ntitle: \"Product Roadmap\"\ndescription: \"From beta to global federation.\"\n---\n\n| Quarter | Milestone | Status |\n|---------|-----------|--------|\n| Q2 2025 | **Closed Beta** \u2014 invite\u2011only iOS + Android | \uD83D\uDD04 In progress |\n| Q3 2025 | **App Store Launch** | \u23F3 |\n| Q4 2025 | **Groups v2** (threads, file sharing) | \u23F3 |\n| 2026    | **Relay Grants** \u2014 fund 10 independent relays | \u23F3 |`,\n\n  // Developers\n  '/developers': `---\ntitle: \"Developers\"\ndescription: \"APIs, SDKs, and open\u2011source repos.\"\n---\n\n### GitHub Repos\n- **rabble\u2011app** \u2014 Next.js + React Native mono\u2011repo\n- **rabble\u2011relay\u2011tools** \u2014 scripts for relay ops\n\n### Quick Start\n\\`\\`\\`bash\n# Install CLI\nyarn global add @rabble/cli\n# Post a note\nrabble note \"Hello world\" --relay wss://relay.verse.nz\n\\`\\`\\`\n\n### API Reference\n| Endpoint | Method | Auth | Description |\n|----------|--------|------|-------------|\n| \\`/api/upload\\` | POST | JWT | Media upload, returns URL |\n| \\`/api/relay-stats\\` | GET | None | JSON of public relay uptime |`,\n\n  // Blog post\n  '/blog/2025-04-24-welcome-to-rabble': `---\ntitle: \"Why We're Reclaiming Our Groups\"\ndescription: \"Centralised social media is broken. Here's our fix.\"\nimage: \"/assets/blog/welcome.webp\"\n---\n\n# Why We're Reclaiming Our Groups\n\nSocial networks once promised global connection. Today they gatekeep speech, harvest data, and nudge behaviour for ad spend.\n\nWhen Facebook started in college dorms, it was simple \u2014 connect with peers. As it evolved into Meta, a different agenda emerged. Communities became products, not people. Engagement metrics trumped human connection. Groups became vehicles for advertising and behavior tracking.\n\nRabble takes us back to basics: \n\n* **User sovereignty** - You hold your keys, own your data\n* **No surveillance** - Your digital life isn't for sale\n* **Community control** - Decisions made by members, not algorithms\n* **Interoperability** - Take your identity and posts to any compatible service\n\nWe believe social media can be better \u2014 can be both enjoyable and ethical. We challenge the notion that exploitation is necessary for sustainability. Our public-benefit corporation structure ensures we're accountable to these values, not just profit.\n\nJoin us in building social media that serves people first.`,\n\n  // Blog index\n  '/blog': `---\ntitle: \"Rabble Blog\"\ndescription: \"Updates from the Rabble team.\"\n---\n\n# Latest from Rabble\n\n## [Why We're Reclaiming Our Groups](/blog/2025-04-24-welcome-to-rabble)\n*April 24, 2025*\n\nSocial networks once promised global connection. Today they gatekeep speech, harvest data, and nudge behaviour for ad spend...\n\n[Read more \u2192](/blog/2025-04-24-welcome-to-rabble)`,\n};\n\n// Create invite landing page for /i/:code\nfunction createInvitePage(code: string, groupId: string, relay: string): string {\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Join Rabble Group - Rabble Community</title>\n  <meta name=\"description\" content=\"You've been invited to join a Rabble group. Rabble is private, ad-free social messaging where you set the rules.\">\n  <meta property=\"og:title\" content=\"Join Rabble Group\">\n  <meta property=\"og:description\" content=\"You've been invited to join a Rabble group. Rabble is private, ad-free social messaging where you set the rules.\">\n  <meta property=\"og:type\" content=\"website\">\n  <meta property=\"og:site_name\" content=\"Rabble Community\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --primary: ${DESIGN_TOKENS.colors.primary};\n      --secondary: ${DESIGN_TOKENS.colors.secondary};\n      --accent: ${DESIGN_TOKENS.colors.accent};\n      --highlight: ${DESIGN_TOKENS.colors.highlight};\n      --surface: ${DESIGN_TOKENS.colors.surface};\n      --surface-alt: ${DESIGN_TOKENS.colors.surfaceAlt};\n      --text-primary: ${DESIGN_TOKENS.colors.textPrimary};\n      --text-secondary: ${DESIGN_TOKENS.colors.textSecondary};\n      --font-family: ${DESIGN_TOKENS.typography.fontFamily};\n      --spacing: ${DESIGN_TOKENS.spacing}px;\n      --radius: ${DESIGN_TOKENS.radius}px;\n      --shadow: ${DESIGN_TOKENS.shadow};\n    }\n    \n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    \n    body {\n      font-family: var(--font-family);\n      color: var(--text-primary);\n      line-height: 1.6;\n      background-color: var(--surface);\n      display: flex;\n      flex-direction: column;\n      min-height: 100vh;\n    }\n    \n    .header {\n      background-color: var(--primary);\n      color: white;\n      padding: 1rem 0;\n    }\n    \n    .container {\n      max-width: 600px;\n      margin: 0 auto;\n      padding: 0 2rem;\n    }\n    \n    .logo {\n      font-size: 1.5rem;\n      font-weight: 700;\n      color: white;\n      text-decoration: none;\n    }\n    \n    .content {\n      padding: 3rem 0;\n      flex: 1;\n      display: flex;\n      align-items: center;\n    }\n    \n    .invite-card {\n      background-color: white;\n      border-radius: var(--radius);\n      box-shadow: var(--shadow);\n      padding: 2rem;\n      text-align: center;\n      width: 100%;\n    }\n    \n    .group-info {\n      margin: 2rem 0;\n    }\n    \n    .group-avatar {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      background-color: var(--primary);\n      margin: 0 auto 1rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: white;\n      font-size: 2rem;\n      font-weight: 700;\n    }\n    \n    h1 {\n      font-size: 1.5rem;\n      margin-bottom: 0.5rem;\n    }\n    \n    p {\n      margin-bottom: 1.5rem;\n      color: var(--text-secondary);\n    }\n    \n    .button-primary {\n      display: inline-block;\n      background-color: var(--secondary);\n      color: white;\n      text-decoration: none;\n      padding: 0.75rem 1.5rem;\n      border-radius: 50px;\n      font-weight: 600;\n      margin-bottom: 1rem;\n      width: 100%;\n      transition: background-color 0.2s;\n    }\n    \n    .button-primary:hover {\n      background-color: #ff6633;\n    }\n    \n    .button-secondary {\n      display: inline-block;\n      background-color: white;\n      color: var(--primary);\n      text-decoration: none;\n      padding: 0.75rem 1.5rem;\n      border-radius: 50px;\n      font-weight: 600;\n      border: 1px solid var(--primary);\n      margin-bottom: 1rem;\n      width: 100%;\n      transition: background-color 0.2s;\n    }\n    \n    .button-secondary:hover {\n      background-color: var(--surface-alt);\n    }\n    \n    .footer {\n      background-color: #2C2141;\n      color: white;\n      padding: 2rem 0;\n      font-size: 0.875rem;\n      text-align: center;\n    }\n    \n    .footer a {\n      color: white;\n      opacity: 0.8;\n      text-decoration: none;\n    }\n    \n    .footer a:hover {\n      opacity: 1;\n    }\n    \n    #group-name {\n      font-weight: 600;\n    }\n    \n    .hidden {\n      display: none;\n    }\n    \n    small {\n      display: block;\n      margin-top: 1rem;\n      color: var(--text-secondary);\n    }\n    \n    @media (max-width: 768px) {\n      .container {\n        padding: 0 1rem;\n      }\n    }\n  </style>\n</head>\n<body>\n  <header class=\"header\">\n    <div class=\"container\">\n      <a href=\"/\" class=\"logo\">Rabble</a>\n    </div>\n  </header>\n  \n  <main class=\"content\">\n    <div class=\"container\">\n      <div class=\"invite-card\">\n        <div class=\"group-info\">\n          <div class=\"group-avatar\" id=\"group-avatar\">R</div>\n          <h1>You're Invited to Join</h1>\n          <p id=\"group-name\">Loading group info...</p>\n        </div>\n        \n        <a href=\"rabble://invite/${code}\" class=\"button-primary\" id=\"open-app\">Open in Rabble App</a>\n        <a href=\"https://play.google.com/store/apps/details?id=community.rabble\" class=\"button-secondary\" id=\"get-android\">Get on Android</a>\n        <a href=\"https://apps.apple.com/app/rabble/id1234567890\" class=\"button-secondary\" id=\"get-ios\">Get on iOS</a>\n        <a href=\"/app?invite=${code}\" class=\"button-secondary\" id=\"open-web\">Continue in Browser</a>\n        \n        <small>Group ID: ${groupId}<br>Relay: ${relay}</small>\n      </div>\n    </div>\n  </main>\n  \n  <footer class=\"footer\">\n    <div class=\"container\">\n      <p>&copy; 2025 Verse PBC \u00B7 <a href=\"/terms-of-service\">Terms</a> \u00B7 <a href=\"/privacy-policy\">Privacy</a></p>\n    </div>\n  </footer>\n  \n  <script>\n    // Platform detection for showing appropriate buttons\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    const isAndroid = /android/i.test(userAgent);\n    const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    \n    // Show/hide appropriate download buttons\n    document.getElementById('get-android').style.display = isAndroid ? 'inline-block' : 'none';\n    document.getElementById('get-ios').style.display = isIOS ? 'inline-block' : 'none';\n    \n    // For demo purposes, we're simulating a group name\n    // In production, this would fetch actual group metadata from the relay\n    document.getElementById('group-name').textContent = 'Community Group';\n    \n    // Set the first letter of the group name as the avatar (as a fallback)\n    document.getElementById('group-avatar').textContent = 'C';\n  </script>\n</body>\n</html>`;\n}\n\n// Helper function to detect file extension and return mime type\nfunction getMimeType(path: string): string {\n  const extension = path.split('.').pop()?.toLowerCase();\n  const mimeTypes: Record<string, string> = {\n    'html': 'text/html',\n    'css': 'text/css',\n    'js': 'application/javascript',\n    'json': 'application/json',\n    'png': 'image/png',\n    'jpg': 'image/jpeg',\n    'jpeg': 'image/jpeg',\n    'webp': 'image/webp',\n    'svg': 'image/svg+xml',\n    'ico': 'image/x-icon',\n    'txt': 'text/plain',\n    'pdf': 'application/pdf',\n  };\n  \n  return mimeTypes[extension || ''] || 'application/octet-stream';\n}\n\n// Function to proxy content from another URL\nasync function proxyContent(url: string, request: Request): Promise<Response> {\n  // Clone headers from the original request\n  const headers = new Headers();\n  for (const [key, value] of request.headers.entries()) {\n    if (key !== 'host') {\n      headers.set(key, value);\n    }\n  }\n  \n  // Fetch the content from the target URL\n  const response = await fetch(url, {\n    method: request.method,\n    headers,\n    body: request.body,\n    redirect: 'follow',\n  });\n  \n  // For HTML responses, we'll use HTMLRewriter to modify links\n  if (response.headers.get('content-type')?.includes('text/html')) {\n    return new HTMLRewriter()\n      .on('a', {\n        element(element) {\n          const href = element.getAttribute('href');\n          if (href && href.startsWith('/')) {\n            element.setAttribute('href', `/app${href}`);\n          }\n        }\n      })\n      .on('link', {\n        element(element) {\n          const href = element.getAttribute('href');\n          if (href && href.startsWith('/')) {\n            element.setAttribute('href', `/app${href}`);\n          }\n        }\n      })\n      .on('script', {\n        element(element) {\n          const src = element.getAttribute('src');\n          if (src && src.startsWith('/')) {\n            element.setAttribute('src', `/app${src}`);\n          }\n        }\n      })\n      .on('img', {\n        element(element) {\n          const src = element.getAttribute('src');\n          if (src && src.startsWith('/')) {\n            element.setAttribute('src', `/app${src}`);\n          }\n        }\n      })\n      .transform(response);\n  }\n  \n  // For other types of content, just pass through\n  return response;\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    const path = url.pathname;\n    \n    // Handle app-linking static files from hardcoded content\n    if (STATIC_FILES[path]) {\n      return new Response(STATIC_FILES[path].content, {\n        headers: {\n          'Content-Type': STATIC_FILES[path].contentType,\n          'Cache-Control': 'public, max-age=86400',\n        }\n      });\n    }\n    \n    // Handle /api routes for invite management\n    if (path.startsWith('/api/invite')) {\n      // GET /api/invite/:code - Get invite details\n      if (request.method === 'GET' && path.match(/^\\/api\\/invite\\/\\w+$/)) {\n        const code = path.split('/').pop() || '';\n        const inviteData = await env.INVITES.get(code);\n        \n        if (!inviteData) {\n          return new Response(JSON.stringify({ error: 'Invite not found' }), {\n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        return new Response(JSON.stringify({ \n          code, \n          ...JSON.parse(inviteData) \n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // POST /api/invite - Create new invite\n      if (request.method === 'POST' && path === '/api/invite') {\n        // Check for valid auth token\n        const token = request.headers.get('X-Invite-Token');\n        if (token !== env.INVITE_TOKEN) {\n          return new Response(JSON.stringify({ error: 'Unauthorized' }), {\n            status: 401,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // Parse request body\n        const body = await request.json();\n        const { groupId, relay } = body;\n        \n        if (!groupId || !relay) {\n          return new Response(JSON.stringify({ error: 'Missing required fields' }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        \n        // Generate unique code\n        const code = generateCode(8);\n        \n        // Store in KV\n        await env.INVITES.put(code, JSON.stringify({ groupId, relay }));\n        \n        // Return the new invite\n        return new Response(JSON.stringify({\n          code,\n          url: `${url.origin}/i/${code}`\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      // Method not allowed\n      return new Response(JSON.stringify({ error: 'Method not allowed' }), {\n        status: 405,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Handle invite pages (/i/:code)\n    if (path.match(/^\\/i\\/\\w+$/)) {\n      const code = path.split('/').pop() || '';\n      const inviteData = await env.INVITES.get(code);\n      \n      if (!inviteData) {\n        return new Response('Invite not found', { status: 404 });\n      }\n      \n      const { groupId, relay } = JSON.parse(inviteData);\n      const html = createInvitePage(code, groupId, relay);\n      \n      return new Response(html, {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Handle /app path (proxy to plur-app)\n    if (path.startsWith('/app')) {\n      const targetPath = path.replace(/^\\/app/, '') || '/';\n      const targetUrl = `https://plur-app.cloudflare.dev${targetPath}${url.search}`;\n      return proxyContent(targetUrl, request);\n    }\n    \n    // Handle static content pages\n    if (PAGES[path]) {\n      const { content, metadata } = markdownToHtml(PAGES[path]);\n      const html = createPage(metadata.title, metadata.description, content, metadata.image);\n      \n      return new Response(html, {\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Handle static files from /static directory\n    // In a real implementation, this would use CF Pages or Assets to serve static files\n    // For this demo, we'll just handle it as a 404 since we can't access the real files\n    \n    // Default 404 page\n    return new Response('Page not found', { \n      status: 404,\n      headers: { 'Content-Type': 'text/plain' }\n    });\n  }\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/rabble/code/verse/invite_gateway/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/rabble/code/verse/invite_gateway/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-BOfNB9/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-BOfNB9/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-BOfNB9/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["content"]
}
