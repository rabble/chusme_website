{
  "version": 3,
  "sources": ["../bundle-FlCqG1/checked-fetch.js", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-FlCqG1/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-FlCqG1/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/dev-fybXqL",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "/// <reference types=\"@cloudflare/workers-types\" />\n\nexport interface Env {\n  INVITES: KVNamespace;\n  INVITE_TOKEN: string;\n}\n\nconst ALPHANUM = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nfunction generateCode(length = 8): string {\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += ALPHANUM[Math.floor(Math.random() * ALPHANUM.length)];\n  }\n  return result;\n}\n\n// Static files for app-linking\nconst STATIC_FILES: Record<string, { content: string; contentType: string }> = {\n  '/.well-known/assetlinks.json': {\n    content: JSON.stringify([{\n      relation: ['delegate_permission/common.handle_all_urls'],\n      target: {\n        namespace: 'android_app',\n        package_name: 'community.rabble',\n        sha256_cert_fingerprints: ['YOUR_APP_FINGERPRINT_HERE']\n      }\n    }]),\n    contentType: 'application/json'\n  },\n  '/apple-app-site-association': {\n    content: JSON.stringify({\n      applinks: {\n        apps: [],\n        details: [{\n          appID: 'YOUR_TEAM_ID.community.rabble',\n          paths: ['/i/*']\n        }]\n      }\n    }),\n    contentType: 'application/json'\n  }\n};\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    const url = new URL(request.url);\n    const { pathname } = url;\n\n    // Serve static files for app-linking\n    if (pathname in STATIC_FILES) {\n      const file = STATIC_FILES[pathname];\n      return new Response(file.content, {\n        status: 200,\n        headers: { 'Content-Type': file.contentType }\n      });\n    }\n\n    // POST /api/invite\n    if (pathname === '/api/invite' && request.method === 'POST') {\n      const token = request.headers.get('X-Invite-Token');\n      if (!token || token !== env.INVITE_TOKEN) {\n        return new Response('Unauthorized', { status: 401 });\n      }\n      let body: any;\n      try {\n        body = await request.json();\n      } catch {\n        return new Response('Invalid JSON body', { status: 400 });\n      }\n      const { groupId, relay } = body;\n      if (typeof groupId !== 'string' || typeof relay !== 'string') {\n        return new Response('Missing groupId or relay', { status: 400 });\n      }\n      const code = generateCode();\n      await env.INVITES.put(code, JSON.stringify({ groupId, relay }));\n      return new Response(\n        JSON.stringify({ code, url: `https://rabble.community/i/${code}` }),\n        { status: 200, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // GET /api/invite/:code\n    if (pathname.startsWith('/api/invite/') && request.method === 'GET') {\n      const parts = pathname.split('/');\n      const code = parts[parts.length - 1];\n      const record = await env.INVITES.get(code, { type: 'json' }) as { groupId: string; relay: string } | null;\n      if (!record) {\n        return new Response('Not found', { status: 404 });\n      }\n      return new Response(\n        JSON.stringify({ code, ...record }),\n        { status: 200, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // GET /i/:code (preview page)\n    if (pathname.startsWith('/i/')) {\n      const code = pathname.split('/')[2];\n      const record = await env.INVITES.get(code, { type: 'json' }) as { groupId: string; relay: string } | null;\n      if (!record) {\n        return new Response('<h1>Invite not found</h1>', {\n          status: 404,\n          headers: { 'Content-Type': 'text/html;charset=UTF-8' }\n        });\n      }\n      \n      // Using string concatenation to avoid template literal issues with TypeScript\n      const html = '<!DOCTYPE html>' +\n        '<html lang=\"en\">' +\n        '<head>' +\n        '  <meta charset=\"UTF-8\" />' +\n        '  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">' +\n        '  <title>Join Rabble Community</title>' +\n        '  <style>' +\n        '    body { font-family: sans-serif; margin: 2rem; }' +\n        '    #avatar { width: 64px; height: 64px; border-radius: 32px; margin-bottom: 1rem; }' +\n        '    #actions button { ' +\n        '      margin-right: 1rem; ' +\n        '      margin-bottom: 1rem;' +\n        '      padding: 0.5rem 1rem; ' +\n        '      font-size: 1rem;' +\n        '      background-color: #4a86e8;' +\n        '      color: white;' +\n        '      border: none;' +\n        '      border-radius: 4px;' +\n        '      cursor: pointer;' +\n        '    }' +\n        '    #actions button:hover {' +\n        '      background-color: #3a76d8;' +\n        '    }' +\n        '    .container {' +\n        '      max-width: 500px;' +\n        '      margin: 0 auto;' +\n        '      text-align: center;' +\n        '    }' +\n        '  </style>' +\n        '</head>' +\n        '<body>' +\n        '  <div class=\"container\">' +\n        '    <div id=\"preview\">' +\n        '      <img id=\"avatar\" src=\"\" hidden />' +\n        '      <h1 id=\"name\">Loading\u2026</h1>' +\n        '      <p id=\"desc\"></p>' +\n        '    </div>' +\n        '    <div id=\"actions\">' +\n        '      <button id=\"open-app\">Open in App</button>' +\n        '      <button id=\"install-app\">Install App</button>' +\n        '      <button id=\"continue-web\">Continue in Browser</button>' +\n        '    </div>' +\n        '  </div>' +\n        '  <script>' +\n        '    const CODE = \"' + code + '\";' +\n        '    const GROUP = \"' + record.groupId + '\";' +\n        '    const RELAY = \"' + record.relay + '\";' +\n        '' +\n        '    async function fetchGroupMeta() {' +\n        '      const ws = new WebSocket(RELAY);' +\n        '      ws.onopen = () => {' +\n        '        ws.send(JSON.stringify([' +\n        '          \"REQ\",' +\n        '          \"sub_\" + CODE,' +\n        '          { \"#e\": [GROUP] }' +\n        '        ]));' +\n        '      };' +\n        '      ws.onmessage = e => {' +\n        '        try {' +\n        '          const [, , event] = JSON.parse(e.data);' +\n        '          const meta = JSON.parse(event.content);' +\n        '          document.getElementById(\"name\").textContent = meta.name || \"Unnamed Group\";' +\n        '          document.getElementById(\"desc\").textContent = meta.about || \"\";' +\n        '          if (meta.picture) {' +\n        '            const img = document.getElementById(\"avatar\");' +\n        '            img.src = meta.picture;' +\n        '            img.hidden = false;' +\n        '          }' +\n        '          ws.close();' +\n        '        } catch (err) {' +\n        '          console.error(\"Failed to parse event\", err);' +\n        '        }' +\n        '      };' +\n        '    }' +\n        '' +\n        '    document.getElementById(\"open-app\").onclick = () => {' +\n        '      window.location = ' +\n        '        \"rabble://join-community?group-id=\" + GROUP + ' +\n        '        \"&code=\" + CODE + ' +\n        '        \"&relay=\" + encodeURIComponent(RELAY);' +\n        '    };' +\n        '    document.getElementById(\"install-app\").onclick = () => {' +\n        '      window.location = ' +\n        '        \"https://apps.apple.com/app/idYOUR_APP_ID?link=https://rabble.community/i/\" + CODE;' +\n        '    };' +\n        '    document.getElementById(\"continue-web\").onclick = () => {' +\n        '      window.location = ' +\n        '        \"https://app.rabble.community/?joinCode=\" + CODE + ' +\n        '        \"&groupId=\" + GROUP + ' +\n        '        \"&relay=\" + encodeURIComponent(RELAY);' +\n        '    };' +\n        '' +\n        '    fetchGroupMeta();' +\n        '  </script>' +\n        '</body>' +\n        '</html>';\n        \n      return new Response(html, {\n        status: 200,\n        headers: { 'Content-Type': 'text/html;charset=UTF-8' }\n      });\n    }\n\n    return new Response('Not found', { status: 404 });\n  }\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/rabble/code/verse/invite_gateway/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/rabble/code/verse/invite_gateway/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-FlCqG1/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/rabble/code/verse/invite_gateway/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-FlCqG1/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/rabble/code/verse/invite_gateway/.wrangler/tmp/bundle-FlCqG1/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
